/**
 * @file Firestore Security Rules
 * @description This ruleset provides basic security for the Chika POS F&B Admin Console,
 * defaulting to allowing all reads and writes as requested for prototyping. It will need to be secured in production.
 *
 * Core Philosophy:
 * This ruleset is in prototyping mode and allows all reads and writes. This should only be used for development.
 *
 * Data Structure:
 * - /platform_overviews/{platformOverviewId}: Stores platform-wide overview data.
 * - /stores/{storeId}/top_up_requests/{topUpRequestId}: Stores top-up requests for a specific store.
 * - /stores/{storeId}: Stores store-specific data.
 * - /users/{userId}: Stores user profile information, linked to Firebase Auth UID.
 * - /premium_catalog_subscriptions/{premiumCatalogSubscriptionId}: Stores details about premium catalog subscriptions.
 * - /platform_settings/{platformSettingId}: Stores platform-wide settings.
 * - /roles_admin/{adminId}: Indicates admin privileges. Document ID is the user's UID.
 *
 * Key Security Decisions:
 * - This ruleset is in prototyping mode and allows all reads and writes.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Manages platform overview data.
     * @path /platform_overviews/{platformOverviewId}
     * @allow (get, list) Any authenticated user can read
     * @allow (create, update, delete) Any authenticated user can write
     * @deny   (get, list) if false
     * @deny   (create, update, delete) if false
     * @principle Public read, owner-only writes (prototyping: all writes allowed)
     */
    match /platform_overviews/{platformOverviewId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Manages top-up requests for stores.
     * @path /stores/{storeId}/top_up_requests/{topUpRequestId}
     * @allow (get, list) Any authenticated user can read
     * @allow (create, update, delete) Any authenticated user can write
     * @deny   (get, list) if false
     * @deny   (create, update, delete) if false
     * @principle Ownership (prototyping: all writes allowed)
     */
    match /stores/{storeId}/top_up_requests/{topUpRequestId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Manages store data.
     * @path /stores/{storeId}
     * @allow (get, list) Any authenticated user can read
     * @allow (create, update, delete) Any authenticated user can write
     * @deny   (get, list) if false
     * @deny   (create, update, delete) if false
     * @principle Ownership (prototyping: all writes allowed)
     */
    match /stores/{storeId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Manages user profile data.
     * @path /users/{userId}
     * @allow (get, list) Any authenticated user can read
     * @allow (create, update, delete) Any authenticated user can write
     * @deny   (get, list) if false
     * @deny   (create, update, delete) if false
     * @principle Ownership (prototyping: all writes allowed)
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Manages premium catalog subscriptions.
     * @path /premium_catalog_subscriptions/{premiumCatalogSubscriptionId}
     * @allow (get, list) Any authenticated user can read
     * @allow (create, update, delete) Any authenticated user can write
     * @deny   (get, list) if false
     * @deny   (create, update, delete) if false
     * @principle Ownership (prototyping: all writes allowed)
     */
    match /premium_catalog_subscriptions/{premiumCatalogSubscriptionId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Manages platform settings.
     * @path /platform_settings/{platformSettingId}
     * @allow (get, list) Any authenticated user can read
     * @allow (create, update, delete) Any authenticated user can write
     * @deny   (get, list) if false
     * @deny   (create, update, delete) if false
     * @principle Ownership (prototyping: all writes allowed)
     */
    match /platform_settings/{platformSettingId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Manages admin role assignments.
     * @path /roles_admin/{adminId}
     * @allow (get, list) Any authenticated user can read
     * @allow (create, update, delete) Any authenticated user can write
     * @deny   (get, list) if false
     * @deny   (create, update, delete) if false
     */
     match /roles_admin/{adminId} {
        allow get, list: if true;
        allow create, update, delete: if true;
     }
  }
}